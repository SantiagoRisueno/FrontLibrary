{"ast":null,"code":"var _jsxFileName = \"/home/georginio/Documentos/TicketsFront/tickets/src/Components/ReceiptTable.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { SideBarAdmin } from './SideBarAdmin';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function ReceiptTable() {\n  _s();\n  const [visible, setVisible] = useState(false);\n  const [receipt, setReceipt] = useState([]);\n  const [first, setFirst] = useState(0);\n  const [rows, setRows] = useState(5);\n  useEffect(() => {\n    fetchData();\n  }, [first, rows]); // Actualiza los datos cuando cambia la paginación\n\n  const fetchData = () => {\n    fetch(`http://localhost:8080/receipt?page=${first / rows}`, {\n      method: \"GET\"\n    }).then(res => res.json()).then(data => {\n      const {\n        content\n      } = data;\n      setReceipt(content);\n      console.log(\"fetching\");\n    }).catch(error => {\n      console.error('Error fetching receipts:', error);\n    });\n  };\n  const formatDate = dateString => {\n    const options = {\n      day: '2-digit',\n      month: '2-digit',\n      year: '2-digit'\n    };\n    return new Date(dateString).toLocaleDateString('en-GB', options);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SideBarAdmin, {\n      visible: visible,\n      onHide: () => setVisible(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n      value: receipt,\n      paginator: true,\n      first: first,\n      rows: rows,\n      onPage: e => {\n        setFirst(e.first);\n        setRows(e.rows);\n      },\n      rowsPerPageOptions: [5, 10, 25, 50],\n      tableStyle: {\n        minWidth: '50rem'\n      },\n      className: \"card-table\",\n      children: [/*#__PURE__*/_jsxDEV(Column, {\n        field: \"id\",\n        header: \"Receipt Id\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        field: \"user.firstName\",\n        header: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        field: \"user.lastName\",\n        header: \"Last Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        field: \"receiptDate\",\n        header: \"Date of receipt\",\n        body: receipt => formatDate(receipt.receiptDate) // Aplica el formato a la fecha\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(ReceiptTable, \"KR15gy8GklIfROK+3o8EGMgIqoQ=\");\n_c = ReceiptTable;\nvar _c;\n$RefreshReg$(_c, \"ReceiptTable\");","map":{"version":3,"names":["useEffect","useState","SideBarAdmin","DataTable","Column","jsxDEV","_jsxDEV","Fragment","_Fragment","ReceiptTable","_s","visible","setVisible","receipt","setReceipt","first","setFirst","rows","setRows","fetchData","fetch","method","then","res","json","data","content","console","log","catch","error","formatDate","dateString","options","day","month","year","Date","toLocaleDateString","children","onHide","fileName","_jsxFileName","lineNumber","columnNumber","value","paginator","onPage","e","rowsPerPageOptions","tableStyle","minWidth","className","field","header","body","receiptDate","_c","$RefreshReg$"],"sources":["/home/georginio/Documentos/TicketsFront/tickets/src/Components/ReceiptTable.js"],"sourcesContent":["\nimport { useEffect, useState } from 'react';\nimport { SideBarAdmin } from './SideBarAdmin';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\n\n\n\nexport function ReceiptTable(){\n    const [visible, setVisible] = useState(false);\n    const [receipt, setReceipt] = useState([]);\n    const [first, setFirst] = useState(0); \n    const [rows, setRows] = useState(5); \n\n    useEffect(() => {\n        fetchData();\n    }, [first, rows]); // Actualiza los datos cuando cambia la paginación\n\n    const fetchData = () => {\n        fetch(`http://localhost:8080/receipt?page=${first / rows}`, {\n            method: \"GET\"\n        })\n        .then((res) => res.json())\n        .then((data) => {\n            const { content } = data;\n            setReceipt(content);\n            console.log(\"fetching\")\n        })\n        .catch((error) => {\n            console.error('Error fetching receipts:', error);\n        });\n    };\n\n    const formatDate = (dateString) => {\n        const options = { day: '2-digit', month: '2-digit', year: '2-digit' };\n        return new Date(dateString).toLocaleDateString('en-GB', options);\n    };\n    \n    return (\n        <>\n            <SideBarAdmin visible={visible} onHide={() => setVisible(false)} />\n            <DataTable \n                value={receipt} \n                paginator \n                first={first}\n                rows={rows}\n                onPage={(e) => {\n                    setFirst(e.first);\n                    setRows(e.rows);\n                }} \n                rowsPerPageOptions={[5, 10, 25, 50]} \n                tableStyle={{ minWidth: '50rem' }}\n                className='card-table'>\n                <Column field=\"id\" header=\"Receipt Id\" />\n                <Column field=\"user.firstName\" header=\"First Name\"/>\n                <Column field=\"user.lastName\" header=\"Last Name\"/>\n                <Column \n                    field=\"receiptDate\" \n                    header=\"Date of receipt\"\n                    body={(receipt) => formatDate(receipt.receiptDate)} // Aplica el formato a la fecha\n                />\n            </DataTable>\n        </>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}