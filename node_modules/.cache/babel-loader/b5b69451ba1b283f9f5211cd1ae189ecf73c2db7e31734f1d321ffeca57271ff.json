{"ast":null,"code":"var _jsxFileName = \"/home/georginio/Documentos/TicketsFront/tickets/src/Components/ReceiptTable.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { SideBarAdmin } from './SideBarAdmin';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function ReceiptTable() {\n  _s();\n  const [visible, setVisible] = useState(false);\n  const [receipt, setReceipt] = useState();\n  const [pageNumber, setPageNumber] = useState(0);\n  const [pageSize, setPageSize] = useState(15);\n  useEffect(() => {\n    fetch(`http://localhost:8080/receipt?pageNumber=${pageNumber}`, {\n      method: \"GET\"\n    }).then(res => res.json()).then(data => {\n      const {\n        content\n      } = data;\n      setReceipt(content);\n      console.log(pageNumber);\n    });\n  }, []);\n  const formatDate = dateString => {\n    const options = {\n      day: '2-digit',\n      month: '2-digit',\n      year: '2-digit'\n    };\n    return new Date(dateString).toLocaleDateString('en-GB', options);\n  };\n  const onClickHandle = () => {\n    setPageNumber + 1;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SideBarAdmin, {\n      visible: visible,\n      onHide: () => setVisible(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n      value: receipt,\n      paginator: true,\n      rows: 5,\n      first: pageNumber,\n      rowsPerPageOptions: [5, 10, 25, 50],\n      tableStyle: {\n        minWidth: '50rem'\n      },\n      className: \"card-table\",\n      children: [/*#__PURE__*/_jsxDEV(Column, {\n        field: \"id\",\n        header: \"Receipt Id\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        field: \"user.firstName\",\n        header: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        field: \"user.lastName\",\n        header: \" Last Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        field: \"receiptDate\",\n        header: \"Date of receipt\",\n        body: receipt => formatDate(receipt.receiptDate) // Aplica el formato a la fecha\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(ReceiptTable, \"4vll3a9LvB22zV8aMsfdTPnyu6E=\");\n_c = ReceiptTable;\nvar _c;\n$RefreshReg$(_c, \"ReceiptTable\");","map":{"version":3,"names":["useEffect","useState","SideBarAdmin","DataTable","Column","jsxDEV","_jsxDEV","Fragment","_Fragment","ReceiptTable","_s","visible","setVisible","receipt","setReceipt","pageNumber","setPageNumber","pageSize","setPageSize","fetch","method","then","res","json","data","content","console","log","formatDate","dateString","options","day","month","year","Date","toLocaleDateString","onClickHandle","children","onHide","fileName","_jsxFileName","lineNumber","columnNumber","value","paginator","rows","first","rowsPerPageOptions","tableStyle","minWidth","className","field","header","body","receiptDate","_c","$RefreshReg$"],"sources":["/home/georginio/Documentos/TicketsFront/tickets/src/Components/ReceiptTable.js"],"sourcesContent":["\nimport { useEffect, useState } from 'react';\nimport { SideBarAdmin } from './SideBarAdmin';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\n\n\nexport function ReceiptTable(){\n    const [visible, setVisible] = useState(false);\n    const [receipt,setReceipt]=useState();\n    const [pageNumber, setPageNumber] = useState(0); \n    const [pageSize, setPageSize] = useState(15); \n\n    useEffect(()=>{\n        fetch(`http://localhost:8080/receipt?pageNumber=${pageNumber}`,{\n            method:\"GET\"\n        })\n        .then((res=>res.json()))\n        .then((data)=>{\n    \n            const {content}=data\n          \n            \n            setReceipt(content)\n            console.log(pageNumber)\n           \n           \n            \n    \n            \n        })\n        \n        \n        },[])\n        const formatDate = (dateString) => {\n            const options = { day: '2-digit', month: '2-digit', year: '2-digit' };\n            return new Date(dateString).toLocaleDateString('en-GB', options);\n        };\n    \n        const onClickHandle=()=>{\n            setPageNumber+1\n        }\n    return (\n\n    <>\n    <SideBarAdmin visible={visible} onHide={() => setVisible(false)}></SideBarAdmin>\n    <DataTable value={receipt} \n            paginator \n            rows={5} \n            first={pageNumber}\n            rowsPerPageOptions={[5, 10, 25, 50]} \n            tableStyle={{ minWidth: '50rem' }}\n            className='card-table'>\n            <Column field=\"id\" header=\"Receipt Id\" />\n            <Column field=\"user.firstName\" header=\"First Name\"/>\n            <Column field=\"user.lastName\" header=\" Last Name\"/>\n            <Column \n                    field=\"receiptDate\" \n                    header=\"Date of receipt\"\n                    body={(receipt) => formatDate(receipt.receiptDate)} // Aplica el formato a la fecha\n            />\n               \n               \n                \n            </DataTable>\n        \n    </>)\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}