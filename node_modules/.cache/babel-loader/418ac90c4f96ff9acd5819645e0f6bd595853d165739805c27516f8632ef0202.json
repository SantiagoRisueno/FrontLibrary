{"ast":null,"code":"var _jsxFileName = \"/home/georginio/Documentos/TicketsFront/tickets/src/Components/TicketTable.1.js\",\n  _s2 = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Checkbox } from \"primereact/checkbox\";\nimport { Button } from 'primereact/button';\nimport { SideBarAdmin } from './SideBarAdmin';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function TicketTable() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [ticket, setTicket] = useState();\n  const [pageNumber, setPageNumber] = useState(1);\n  const [pageSize, setPageSize] = useState(5);\n  const fetchTicket = () => {\n    _s();\n    fetch(\"http://localhost:8080/ticket\", {\n      method: \"GET\"\n    }).then(res => res.json()).then(data => {\n      const {\n        content\n      } = data;\n      setTicket(content);\n    });\n    useEffect(() => {\n      fetchTicket();\n    }, [pageNumber, pageSize]); // Re-renderiza la tabla cuando cambia la página o el tamaño de la página\n\n    const handleButtonClick = (idUser, idTicket) => {\n      const data = {\n        idUser: idUser\n      };\n      const newState = {\n        ticketState: true,\n        id: idTicket\n      };\n      console.log(newState);\n      fetch('http://localhost:8080/receipt', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json' // Asegúrate de establecer el tipo de contenido adecuado\n        },\n        body: JSON.stringify(data) // Convierte tu objeto de datos a formato JSON\n      }).then(response => response.json()).then(dataReceipt => {\n        console.log('Respuesta del servidor:', dataReceipt);\n        fetch(`http://localhost:8080/ticket/${newState.id}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(newState)\n        }).then(response => response.json()).then(updateTicket => {\n          console.log(\"EL ticket se acutalizo\");\n          console.log(updateTicket);\n        }).catch(error => {\n          console.error(\"ERROR AL ENVIAR\");\n        });\n      }).catch(error => {\n        console.error('Error al enviar la solicitud:', error);\n      });\n    };\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(SideBarAdmin, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n          value: ticket,\n          paginator: true,\n          rows: 5,\n          rowsPerPageOptions: [5, 10, 25, 50],\n          tableStyle: {\n            minWidth: '50rem'\n          },\n          className: \"card-table\",\n          children: [/*#__PURE__*/_jsxDEV(Column, {\n            field: \"id\",\n            header: \"Ticket Id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            field: \"user.firstName\",\n            header: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            field: \"user.lastName\",\n            header: \" Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            field: \"user.department\",\n            header: \"Departament\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            field: \"description\",\n            header: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            body: ticket => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: ticket.ticketState\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 29\n              }, this), !ticket.ticketState && /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleButtonClick(ticket.user.id, ticket.id),\n                label: \"Receipt\",\n                className: \"button\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 53\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 51\n            }, this),\n            header: \"Ticket State\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  };\n  _s(fetchTicket, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n}\n_s2(TicketTable, \"/ltvxO22Hc8VPtBACEVo8r6l4tM=\");\n_c = TicketTable;\nvar _c;\n$RefreshReg$(_c, \"TicketTable\");","map":{"version":3,"names":["useEffect","useState","DataTable","Column","Checkbox","Button","SideBarAdmin","jsxDEV","_jsxDEV","Fragment","_Fragment","TicketTable","_s2","_s","$RefreshSig$","ticket","setTicket","pageNumber","setPageNumber","pageSize","setPageSize","fetchTicket","fetch","method","then","res","json","data","content","handleButtonClick","idUser","idTicket","newState","ticketState","id","console","log","headers","body","JSON","stringify","response","dataReceipt","updateTicket","catch","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","value","paginator","rows","rowsPerPageOptions","tableStyle","minWidth","field","header","checked","onClick","user","label","_c","$RefreshReg$"],"sources":["/home/georginio/Documentos/TicketsFront/tickets/src/Components/TicketTable.1.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Checkbox } from \"primereact/checkbox\";\nimport { Button } from 'primereact/button';\nimport { SideBarAdmin } from './SideBarAdmin';\n\n\nexport function TicketTable() {\n\n    const [ticket, setTicket] = useState();\n    const [pageNumber, setPageNumber] = useState(1);\n    const [pageSize, setPageSize] = useState(5);\n\n\n\n    const fetchTicket = (() => {\n        fetch(\"http://localhost:8080/ticket\", {\n            method: \"GET\"\n        })\n            .then((res => res.json()))\n            .then((data) => {\n\n                const { content } = data;\n\n\n                setTicket(content);\n            });\n        useEffect(() => {\n            fetchTicket();\n        }, [pageNumber, pageSize]); // Re-renderiza la tabla cuando cambia la página o el tamaño de la página\n\n\n\n        const handleButtonClick = (idUser, idTicket) => {\n\n            const data = { idUser: idUser };\n\n            const newState = { ticketState: true, id: idTicket };\n            console.log(newState);\n\n\n            fetch('http://localhost:8080/receipt', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json' // Asegúrate de establecer el tipo de contenido adecuado\n                },\n                body: JSON.stringify(data) // Convierte tu objeto de datos a formato JSON\n            })\n                .then(response => response.json())\n                .then(dataReceipt => {\n                    console.log('Respuesta del servidor:', dataReceipt);\n                    fetch(`http://localhost:8080/ticket/${newState.id}`, {\n                        method: 'PUT',\n                        headers: {\n                            'Content-Type': 'application/json'\n                        },\n                        body: JSON.stringify(newState)\n                    })\n                        .then(response => response.json())\n                        .then(updateTicket => {\n                            console.log(\"EL ticket se acutalizo\");\n                            console.log(updateTicket);\n\n                        })\n                        .catch(error => {\n                            console.error(\"ERROR AL ENVIAR\");\n\n                        });\n\n                })\n                .catch(error => {\n                    console.error('Error al enviar la solicitud:', error);\n                });\n        };\n\n\n\n        return (\n            <>\n                <div className=\"card\">\n                    <SideBarAdmin />\n                    <DataTable value={ticket}\n                        paginator\n                        rows={5}\n                        rowsPerPageOptions={[5, 10, 25, 50]}\n                        tableStyle={{ minWidth: '50rem' }}\n                        className='card-table'>\n                        <Column field=\"id\" header=\"Ticket Id\" />\n                        <Column field=\"user.firstName\" header=\"First Name\" />\n                        <Column field=\"user.lastName\" header=\" Last Name\" />\n                        <Column field=\"user.department\" header=\"Departament\" />\n                        <Column field=\"description\" header=\"Description\" />\n                        <Column body={(ticket) => <div>\n                            <Checkbox checked={ticket.ticketState} />\n                            {!ticket.ticketState && <Button onClick={() => handleButtonClick(ticket.user.id, ticket.id)} label=\"Receipt\" className='button' />}\n\n                        </div>}\n                            header=\"Ticket State\" />\n\n                    </DataTable>\n                </div>\n\n\n\n            </>);\n\n    });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}