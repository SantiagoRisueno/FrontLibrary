{"ast":null,"code":"var _jsxFileName = \"/home/georginio/Documentos/TicketsFront/tickets/src/Components/TicketTable.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport '../App.css';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Checkbox } from \"primereact/checkbox\";\nimport { Button } from 'primereact/button';\nimport { SideBarAdmin } from './SideBarAdmin';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function TicketTable() {\n  _s();\n  const [ticket, setTicket] = useState();\n  const [pageNumber, setPageNumber] = useState(0);\n  const [pageSize, setPageSize] = useState(15);\n  useEffect(() => {\n    fetchTickets();\n  }, [pageNumber, pageSize]); // Re-renderiza la tabla cuando cambia la página o el tamaño de la página\n\n  const fetchTickets = () => {\n    fetch(`http://localhost:8080/ticket?pageNumber=${pageNumber}&pageSize=${pageSize}`, {\n      method: \"GET\"\n    }).then(res => res.json()).then(data => {\n      const {\n        content\n      } = data;\n      setTicket(content);\n    });\n  };\n  const handleButtonClick = (idUser, idTicket) => {\n    const data = {\n      idUser: idUser\n    };\n    const newState = {\n      ticketState: true,\n      id: idTicket\n    };\n    console.log(newState);\n    fetch('http://localhost:8080/receipt', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json' // Asegúrate de establecer el tipo de contenido adecuado\n      },\n      body: JSON.stringify(data) // Convierte tu objeto de datos a formato JSON\n    }).then(response => response.json()).then(dataReceipt => {\n      console.log('Respuesta del servidor:', dataReceipt);\n      fetch(`http://localhost:8080/ticket/${newState.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newState)\n      }).then(response => response.json()).then(updateTicket => {\n        console.log(\"EL ticket se acutalizo\");\n        console.log(updateTicket);\n      }).catch(error => {\n        console.error(\"ERROR AL ENVIAR\");\n      });\n    }).catch(error => {\n      console.error('Error al enviar la solicitud:', error);\n    });\n  };\n  const handlePageChange = event => {\n    setPageNumber(event.page + 1); // La propiedad 'page' de 'event' comienza desde 0\n  };\n  console.log(typeof pageSize);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(SideBarAdmin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n        value: ticket,\n        paginator: true,\n        rows: pageSize,\n        onPage: handlePageChange // Manejar el cambio de página\n        ,\n        first: (pageNumber - 1) * pageSize // Calcula el primer índice de la página actual\n        ,\n\n        rowsPerPageOptions: [5, 10, 25, 50],\n        tableStyle: {\n          minWidth: '50rem'\n        },\n        className: \"card-table\",\n        children: [/*#__PURE__*/_jsxDEV(Column, {\n          field: \"id\",\n          header: \"Ticket Id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          field: \"user.firstName\",\n          header: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          field: \"user.lastName\",\n          header: \" Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          field: \"user.department\",\n          header: \"Departament\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          field: \"description\",\n          header: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          body: ticket => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: ticket.ticketState\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 21\n            }, this), !ticket.ticketState && /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => handleButtonClick(ticket.user.id, ticket.id),\n              label: \"Receipt\",\n              className: \"button\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this),\n          header: \"Ticket State\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(TicketTable, \"e7qSI2CXldS5P+8ODg2Di6SpHMo=\");\n_c = TicketTable;\nvar _c;\n$RefreshReg$(_c, \"TicketTable\");","map":{"version":3,"names":["useEffect","useState","DataTable","Column","Checkbox","Button","SideBarAdmin","jsxDEV","_jsxDEV","Fragment","_Fragment","TicketTable","_s","ticket","setTicket","pageNumber","setPageNumber","pageSize","setPageSize","fetchTickets","fetch","method","then","res","json","data","content","handleButtonClick","idUser","idTicket","newState","ticketState","id","console","log","headers","body","JSON","stringify","response","dataReceipt","updateTicket","catch","error","handlePageChange","event","page","children","className","fileName","_jsxFileName","lineNumber","columnNumber","value","paginator","rows","onPage","first","rowsPerPageOptions","tableStyle","minWidth","field","header","checked","onClick","user","label","_c","$RefreshReg$"],"sources":["/home/georginio/Documentos/TicketsFront/tickets/src/Components/TicketTable.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport '../App.css';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\n\nimport { Checkbox } from \"primereact/checkbox\";\nimport { Button } from 'primereact/button';\n\nimport { SideBarAdmin } from './SideBarAdmin';\n\nexport function TicketTable(){\n\n    const [ticket,setTicket]=useState()\n    const [pageNumber, setPageNumber] = useState(0); \n    const [pageSize, setPageSize] = useState(15); \n    useEffect(() => {\n        fetchTickets();\n    }, [pageNumber, pageSize]); // Re-renderiza la tabla cuando cambia la página o el tamaño de la página\n\n\n    const  fetchTickets = ()=>{\n        fetch(`http://localhost:8080/ticket?pageNumber=${pageNumber}&pageSize=${pageSize}`,{\n        method:\"GET\"\n    })\n    .then((res=>res.json()))\n    .then((data)=>{\n\n        const {content}=data\n      \n        \n        setTicket(content)\n    })\n}\n   \n   \n\n    const handleButtonClick = (idUser,idTicket)=>{\n\n        const data ={idUser:idUser}\n      \n        const newState ={ticketState: true,id:idTicket}\n        console.log(newState)\n        \n\n        fetch('http://localhost:8080/receipt', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json' // Asegúrate de establecer el tipo de contenido adecuado\n            },\n            body: JSON.stringify(data) // Convierte tu objeto de datos a formato JSON\n        })\n        .then(response => response.json())\n        .then(dataReceipt => {\n            console.log('Respuesta del servidor:', dataReceipt);\n            fetch(`http://localhost:8080/ticket/${newState.id}`,{\n                method:'PUT',\n                headers:{\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(newState)\n                \n            })\n            .then(response => response.json())\n            .then(updateTicket=>{\n                console.log(\"EL ticket se acutalizo\")\n                console.log(updateTicket);\n\n            })\n            .catch(error=>{\n                console.error(\"ERROR AL ENVIAR\")\n\n            })\n           \n        })\n        .catch(error => {\n            console.error('Error al enviar la solicitud:', error);\n        });\n    }\n    const handlePageChange = (event) => {\n        setPageNumber(event.page + 1); // La propiedad 'page' de 'event' comienza desde 0\n    }\n    \n   console.log(typeof(pageSize))\n\n    return(\n        <>\n        <div className=\"card\">\n            <SideBarAdmin/>\n            <DataTable value={ticket} \n            paginator \n            rows={pageSize} \n            onPage={handlePageChange} // Manejar el cambio de página\n                    first={(pageNumber - 1) * pageSize} // Calcula el primer índice de la página actual\n                    \n            rowsPerPageOptions={[5, 10, 25, 50]} \n            tableStyle={{ minWidth: '50rem' }}\n            className='card-table'>\n            <Column field=\"id\" header=\"Ticket Id\" />\n                <Column field=\"user.firstName\" header=\"First Name\"/>\n                <Column field=\"user.lastName\" header=\" Last Name\"/>\n                <Column field=\"user.department\" header=\"Departament\"/>\n                <Column field=\"description\" header=\"Description\"/>\n                <Column body={(ticket) => \n                <div>\n                    <Checkbox checked={ticket.ticketState} />\n                    {!ticket.ticketState && <Button onClick={() => handleButtonClick(ticket.user.id,ticket.id )} label=\"Receipt\" className='button' />}\n\n                </div>}\n                header=\"Ticket State\"/>\n                \n            </DataTable>\n        </div>\n        \n    \n        \n        </>)\n\n    }\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}