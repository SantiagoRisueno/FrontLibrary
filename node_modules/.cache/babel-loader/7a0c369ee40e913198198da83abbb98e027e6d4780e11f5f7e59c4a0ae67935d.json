{"ast":null,"code":"var _jsxFileName = \"/home/georginio/Documentos/TicketsFront/tickets/src/Components/ReceiptTable.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { SideBarAdmin } from './SideBarAdmin';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { useLocation, withRouter } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function ReceiptTable(props) {\n  _s();\n  const [visible, setVisible] = useState(false);\n  const [receipt, setReceipt] = useState([]);\n  const [pageMessage, setPageMessage] = useState('');\n  const location = useLocation();\n  useEffect(() => {\n    // Obtener el número de página de la URL\n    const params = new URLSearchParams(location.search);\n    const pageNumber = parseInt(params.get('pageNumber')) || 1;\n    fetch(`http://localhost:8080/receipt?pageNumber=${pageNumber}`, {\n      method: \"GET\"\n    }).then(res => res.json()).then(data => {\n      const {\n        content\n      } = data;\n      setReceipt(content);\n    });\n  }, [location.search]);\n  useEffect(() => {\n    // Obtener el número de página actual y actualizar la URL\n    const params = new URLSearchParams(location.search);\n    const pageNumber = parseInt(params.get('pageNumber')) || 1;\n    if (pageNumber !== 1) {\n      props.history.push(`/receipt?pageNumber=${pageNumber}`);\n    }\n  }, [receipt, props.history, location.search]);\n  const formatDate = dateString => {\n    const options = {\n      day: '2-digit',\n      month: '2-digit',\n      year: '2-digit'\n    };\n    return new Date(dateString).toLocaleDateString('en-GB', options);\n  };\n  const onPageChange = event => {\n    // No necesitas hacer nada aquí, ya que la URL se actualizará automáticamente\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SideBarAdmin, {\n      visible: visible,\n      onHide: () => setVisible(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n      value: receipt,\n      paginator: true,\n      rows: 5,\n      rowsPerPageOptions: [5, 10, 25, 50],\n      tableStyle: {\n        minWidth: '50rem'\n      },\n      className: \"card-table\",\n      onPage: onPageChange,\n      children: [/*#__PURE__*/_jsxDEV(Column, {\n        field: \"id\",\n        header: \"Receipt Id\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        field: \"user.firstName\",\n        header: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        field: \"user.lastName\",\n        header: \"Last Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        field: \"receiptDate\",\n        header: \"Date of receipt\",\n        body: receipt => formatDate(receipt.receiptDate) // Aplica el formato a la fecha\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(ReceiptTable, \"7stUXQPYX9pnSgG/Ogt1//9haTc=\", false, function () {\n  return [useLocation];\n});\n_c = ReceiptTable;\nvar _c;\n$RefreshReg$(_c, \"ReceiptTable\");","map":{"version":3,"names":["useEffect","useState","SideBarAdmin","DataTable","Column","useLocation","withRouter","jsxDEV","_jsxDEV","Fragment","_Fragment","ReceiptTable","props","_s","visible","setVisible","receipt","setReceipt","pageMessage","setPageMessage","location","params","URLSearchParams","search","pageNumber","parseInt","get","fetch","method","then","res","json","data","content","history","push","formatDate","dateString","options","day","month","year","Date","toLocaleDateString","onPageChange","event","children","onHide","fileName","_jsxFileName","lineNumber","columnNumber","value","paginator","rows","rowsPerPageOptions","tableStyle","minWidth","className","onPage","field","header","body","receiptDate","_c","$RefreshReg$"],"sources":["/home/georginio/Documentos/TicketsFront/tickets/src/Components/ReceiptTable.js"],"sourcesContent":["\nimport { useEffect, useState } from 'react';\nimport { SideBarAdmin } from './SideBarAdmin';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { useLocation, withRouter } from 'react-router-dom';\n\nexport function ReceiptTable(props) {\n    const [visible, setVisible] = useState(false);\n    const [receipt, setReceipt] = useState([]);\n    const [pageMessage, setPageMessage] = useState('');\n    const location = useLocation();\n  \n    useEffect(() => {\n      // Obtener el número de página de la URL\n      const params = new URLSearchParams(location.search);\n      const pageNumber = parseInt(params.get('pageNumber')) || 1;\n  \n      fetch(`http://localhost:8080/receipt?pageNumber=${pageNumber}`, {\n        method: \"GET\"\n      })\n        .then((res => res.json()))\n        .then((data) => {\n          const { content } = data;\n          setReceipt(content);\n        })\n    }, [location.search]);\n  \n    useEffect(() => {\n      // Obtener el número de página actual y actualizar la URL\n      const params = new URLSearchParams(location.search);\n      const pageNumber = parseInt(params.get('pageNumber')) || 1;\n      if (pageNumber !== 1) {\n        props.history.push(`/receipt?pageNumber=${pageNumber}`);\n      }\n    }, [receipt, props.history, location.search]);\n  \n    const formatDate = (dateString) => {\n      const options = { day: '2-digit', month: '2-digit', year: '2-digit' };\n      return new Date(dateString).toLocaleDateString('en-GB', options);\n    };\n  \n    const onPageChange = (event) => {\n      // No necesitas hacer nada aquí, ya que la URL se actualizará automáticamente\n    };\n  \n    return (\n      <>\n        <SideBarAdmin visible={visible} onHide={() => setVisible(false)}></SideBarAdmin>\n        <DataTable value={receipt}\n          paginator\n          rows={5}\n          rowsPerPageOptions={[5, 10, 25, 50]}\n          tableStyle={{ minWidth: '50rem' }}\n          className='card-table'\n          onPage={onPageChange}\n        >\n          <Column field=\"id\" header=\"Receipt Id\" />\n          <Column field=\"user.firstName\" header=\"First Name\" />\n          <Column field=\"user.lastName\" header=\"Last Name\" />\n          <Column\n            field=\"receiptDate\"\n            header=\"Date of receipt\"\n            body={(receipt) => formatDate(receipt.receiptDate)} // Aplica el formato a la fecha\n          />\n        </DataTable>\n      </>\n    );\n  }\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}