{"ast":null,"code":"var _jsxFileName = \"/home/georginio/Documentos/TicketsFront/tickets/src/Components/ReceiptTable.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { SideBarAdmin } from './SideBarAdmin';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function ReceiptTable() {\n  _s();\n  const [visible, setVisible] = useState(false);\n  const [receipt, setReceipt] = useState();\n  const [first, setFirst] = useState(0);\n  useEffect(() => {\n    fetch(\"http://localhost:8080/receipt\", {\n      method: \"GET\"\n    }).then(res => res.json()).then(data => {\n      const {\n        content\n      } = data;\n      setReceipt(content);\n    });\n  }, []);\n  const formatDate = dateString => {\n    const options = {\n      day: '2-digit',\n      month: '2-digit',\n      year: '2-digit'\n    };\n    return new Date(dateString).toLocaleDateString('en-GB', options);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SideBarAdmin, {\n      visible: visible,\n      onHide: () => setVisible(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n      value: receipt,\n      paginator: true,\n      first: first,\n      rows: 5,\n      onPage: e => {\n        setFirst(e.first);\n        setRows(e.rows);\n        console.log(first);\n      },\n      rowsPerPageOptions: [5, 10, 25, 50],\n      tableStyle: {\n        minWidth: '50rem'\n      },\n      className: \"card-table\",\n      children: [/*#__PURE__*/_jsxDEV(Column, {\n        field: \"id\",\n        header: \"Receipt Id\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        field: \"user.firstName\",\n        header: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        field: \"user.lastName\",\n        header: \" Last Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        field: \"receiptDate\",\n        header: \"Date of receipt\",\n        body: receipt => formatDate(receipt.receiptDate) // Aplica el formato a la fecha\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(ReceiptTable, \"g5D+jSLBwrwEpa4NUEoyyzRMgz4=\");\n_c = ReceiptTable;\nvar _c;\n$RefreshReg$(_c, \"ReceiptTable\");","map":{"version":3,"names":["useEffect","useState","SideBarAdmin","DataTable","Column","jsxDEV","_jsxDEV","Fragment","_Fragment","ReceiptTable","_s","visible","setVisible","receipt","setReceipt","first","setFirst","fetch","method","then","res","json","data","content","formatDate","dateString","options","day","month","year","Date","toLocaleDateString","children","onHide","fileName","_jsxFileName","lineNumber","columnNumber","value","paginator","rows","onPage","e","setRows","console","log","rowsPerPageOptions","tableStyle","minWidth","className","field","header","body","receiptDate","_c","$RefreshReg$"],"sources":["/home/georginio/Documentos/TicketsFront/tickets/src/Components/ReceiptTable.js"],"sourcesContent":["\nimport { useEffect, useState } from 'react';\nimport { SideBarAdmin } from './SideBarAdmin';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\n\n\nexport function ReceiptTable(){\n    const [visible, setVisible] = useState(false);\n    const [receipt,setReceipt]=useState();\n    const [first, setFirst] = useState(0); \n     \n\n    useEffect(()=>{\n        fetch(\"http://localhost:8080/receipt\",{\n            method:\"GET\"\n        })\n        .then((res=>res.json()))\n        .then((data)=>{\n    \n            const {content}=data\n          \n            \n            setReceipt(content)\n           \n           \n            \n    \n            \n        })\n        \n        \n        },[])\n        const formatDate = (dateString) => {\n            const options = { day: '2-digit', month: '2-digit', year: '2-digit' };\n            return new Date(dateString).toLocaleDateString('en-GB', options);\n        };\n    \n    return (\n\n    <>\n    <SideBarAdmin visible={visible} onHide={() => setVisible(false)}></SideBarAdmin>\n    <DataTable \n            value={receipt} \n            paginator \n            first={first}\n            rows={5}\n            onPage={(e)=>{\n\n                setFirst(e.first)\n                setRows(e.rows)\n                console.log(first)\n             \n\n            }} \n            rowsPerPageOptions={[5, 10, 25, 50]} \n            tableStyle={{ minWidth: '50rem' }}\n            className='card-table'>\n            <Column field=\"id\" header=\"Receipt Id\" />\n            <Column field=\"user.firstName\" header=\"First Name\"/>\n            <Column field=\"user.lastName\" header=\" Last Name\"/>\n            <Column \n                    field=\"receiptDate\" \n                    header=\"Date of receipt\"\n                    body={(receipt) => formatDate(receipt.receiptDate)} // Aplica el formato a la fecha\n            />\n               \n               \n                \n            </DataTable>\n        \n    </>)\n\n}"],"mappings":";;AACA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,SAASC,SAAS,QAAQ,sBAAsB;AAChD,SAASC,MAAM,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG3C,OAAO,SAASC,YAAYA,CAAA,EAAE;EAAAC,EAAA;EAC1B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACY,OAAO,EAACC,UAAU,CAAC,GAACb,QAAQ,CAAC,CAAC;EACrC,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EAGrCD,SAAS,CAAC,MAAI;IACViB,KAAK,CAAC,+BAA+B,EAAC;MAClCC,MAAM,EAAC;IACX,CAAC,CAAC,CACDC,IAAI,CAAEC,GAAG,IAAEA,GAAG,CAACC,IAAI,CAAC,CAAE,CAAC,CACvBF,IAAI,CAAEG,IAAI,IAAG;MAEV,MAAM;QAACC;MAAO,CAAC,GAACD,IAAI;MAGpBR,UAAU,CAACS,OAAO,CAAC;IAMvB,CAAC,CAAC;EAGF,CAAC,EAAC,EAAE,CAAC;EACL,MAAMC,UAAU,GAAIC,UAAU,IAAK;IAC/B,MAAMC,OAAO,GAAG;MAAEC,GAAG,EAAE,SAAS;MAAEC,KAAK,EAAE,SAAS;MAAEC,IAAI,EAAE;IAAU,CAAC;IACrE,OAAO,IAAIC,IAAI,CAACL,UAAU,CAAC,CAACM,kBAAkB,CAAC,OAAO,EAAEL,OAAO,CAAC;EACpE,CAAC;EAEL,oBAEApB,OAAA,CAAAE,SAAA;IAAAwB,QAAA,gBACA1B,OAAA,CAACJ,YAAY;MAACS,OAAO,EAAEA,OAAQ;MAACsB,MAAM,EAAEA,CAAA,KAAMrB,UAAU,CAAC,KAAK;IAAE;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CAAC,eAChF/B,OAAA,CAACH,SAAS;MACFmC,KAAK,EAAEzB,OAAQ;MACf0B,SAAS;MACTxB,KAAK,EAAEA,KAAM;MACbyB,IAAI,EAAE,CAAE;MACRC,MAAM,EAAGC,CAAC,IAAG;QAET1B,QAAQ,CAAC0B,CAAC,CAAC3B,KAAK,CAAC;QACjB4B,OAAO,CAACD,CAAC,CAACF,IAAI,CAAC;QACfI,OAAO,CAACC,GAAG,CAAC9B,KAAK,CAAC;MAGtB,CAAE;MACF+B,kBAAkB,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAE;MACpCC,UAAU,EAAE;QAAEC,QAAQ,EAAE;MAAQ,CAAE;MAClCC,SAAS,EAAC,YAAY;MAAAjB,QAAA,gBACtB1B,OAAA,CAACF,MAAM;QAAC8C,KAAK,EAAC,IAAI;QAACC,MAAM,EAAC;MAAY;QAAAjB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzC/B,OAAA,CAACF,MAAM;QAAC8C,KAAK,EAAC,gBAAgB;QAACC,MAAM,EAAC;MAAY;QAAAjB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACpD/B,OAAA,CAACF,MAAM;QAAC8C,KAAK,EAAC,eAAe;QAACC,MAAM,EAAC;MAAY;QAAAjB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACnD/B,OAAA,CAACF,MAAM;QACC8C,KAAK,EAAC,aAAa;QACnBC,MAAM,EAAC,iBAAiB;QACxBC,IAAI,EAAGvC,OAAO,IAAKW,UAAU,CAACX,OAAO,CAACwC,WAAW,CAAE,CAAC;MAAA;QAAAnB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIS,CAAC;EAAA,eAElB,CAAC;AAEP;AAAC3B,EAAA,CAlEeD,YAAY;AAAA6C,EAAA,GAAZ7C,YAAY;AAAA,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}